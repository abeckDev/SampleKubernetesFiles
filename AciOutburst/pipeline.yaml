jobs:
- job: SetupEnv
  displayName: 'Setup Test Environment' 
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  
  #Define the pod name based on build definition name and Build number and filter out all bad characters for Kubernetes (only lowercase aplphanumeric allowed)
    - script: |
        PodName=$(echo $(Build.DefinitionName)-$(Build.BuildNumber) | tr -dc a-z0-9)
        echo $PodName
        echo "##vso[task.setvariable variable=PodName] $PodName"
        echo $PodName
      displayName: "Set Env Var"
      
  # Replace Name of Deployment in Kubernetes Manifest file with unique generated name for this build
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: "Replace tokens in testingEnvironment.yaml"
      inputs:
        rootDirectory: AciOutburst
        targetFiles: testingEnvironment.yaml
        tokenPrefix: "__"
        tokenSuffix: "__"

 # Deploy the Kubernetes Manifest file to AKS --> Make sure you have an existing service connection: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml#create-a-service-connection 
    - task: KubernetesManifest@0
      displayName: deploy
      inputs:
        kubernetesServiceConnection: "KubeTest-AksDemoCluster-default-1592853187390"
        namespace: default
        manifests: AciOutburst/testingEnvironment.yaml

- job: ExecTests
  displayName: 'Execute the tests'
  dependsOn: SetupEnv
  pool:
    vmImage: 'ubuntu-latest'
  steps:
# Set Var again to make sure it is still present 
  - script: |
      PodName=$(echo $(Build.DefinitionName)-$(Build.BuildNumber) | tr -dc a-z0-9)
      echo $PodName  
      echo "##vso[task.setvariable variable=PodName] $PodName"
      echo $PodName
    displayName: 'Set Env Var'

# Execute the command in the existing pod with kubectl exec --> Make sure to link your Kubernetes Service connection: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml#create-a-service-connection
  - task: Kubernetes@1
    displayName: 'kubectl exec'
    inputs:
      kubernetesServiceEndpoint: 'KubeTest-AksDemoCluster-default-1592853187390'
      namespace: default
      command: exec
      arguments: '$(PodName) -- /bin/bash -c echo Starting Test procedure; sleep 15; echo Done'

- job: Cleanup
  displayName: 'Cleanup Environment'
  dependsOn:
    - SetupEnv
    - ExecTests
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  # Set Var again to make sure it is still present 
  - script: |
      PodName=$(echo $(Build.DefinitionName)-$(Build.BuildNumber) | tr -dc a-z0-9)
      echo $PodName
      echo "##vso[task.setvariable variable=PodName] $PodName"
      echo $PodName
    displayName: 'Set Env Var'

  # Delete Kubernetes resources to save capacity and money (if working on ACI instances)
  - task: Kubernetes@1
    displayName: 'kubectl delete'
    inputs:
      kubernetesServiceEndpoint: 'KubeTest-AksDemoCluster-default-1592853187390'
      namespace: default
      command: delete
      arguments: 'pod $(PodName)'
